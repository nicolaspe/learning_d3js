<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>npe D3js</title>

		<script src="d3.min.js"></script>
    <style>
      .chart div {
        font: 10px sans-serif;
        background-color: steelblue;
        text-align: right;
        padding: 3px;
        margin: 1px;
        color: white;
      }
      .chart div:hover {
        background-color: purple;
      }
      .chart rect {
        fill: steelblue;
      }
      .chart rect:hover {
        fill: purple;
      }
			.axis text {
				font: 10px sans-serif;
			}
			.axis path,
			.axis line {
				fill: none;
				stroke: #000;
				shape-rendering: crispEdges;
			}
    </style>
	</head>
	<body>
		<h2>Vertical letter ordinal graph</h2>
		<svg class="chart"></svg>

		<script>
		var margin = {top: 20, right: 30, bottom: 30, left: 40},
				width = 900 -margin.left -margin.right,
				height = 500 -margin.top -margin.bottom;

		var x = d3.scaleBand()
			.padding(0.1)
			.rangeRound([0, width]);
		var y = d3.scaleLinear()
			.range([height, 0]);

		var xAxis = d3.axisBottom()
			.scale(x);
		var yAxis = d3.axisLeft()
			.scale(y);

		var chart = d3.select(".chart")
			.attr("width", width +margin.left +margin.right)
			.attr("height", height +margin.top + margin.bottom)
			.append("g")
				.attr("transform", "translate("+ margin.left +","+ margin.top +")");

		d3.tsv("https://raw.githubusercontent.com/nicolaspe/learning_d3js/master/dataLetters.tsv", type, function(error,data){
			x.domain(data.map(function(d){ return d.name; } ));
			y.domain([0, d3.max(data, function(d){ return d.value; } )]);

			chart.append("svg")
				.attr("class", "x axis")
				.append("g")
				.attr("transform", "translate(0,"+ height +")")
				.call(xAxis);
			chart.append("g")
				.attr("class", "y axis")
				.call(yAxis);

			var bar = chart.selectAll(".bar")
				.data(data)
				.enter().append("rect")
				.attr("class", "bar")
				.attr("x", function(d){ return x(d.name); })
				.attr("y", function(d){ return y(d.value); })
				.attr("height", function(d){ return height - y(d.value); })
				.attr("width", x.bandwidth());
		});

		function type(d) {
  		d.value = +d.value; // coerce to number
  		return d;
		}
		</script>

	</body>
</html>
